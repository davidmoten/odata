{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "OData JSON Format for Common Schema Definition Language (CSDL) Version 4.0",
    "@TODO": "add descriptions in all appropriate places",
    "@TODO#2": "add examples for Geo types",
    "properties": {
        "x-odata-version": {
            "enum": [
                "4.0"
            ]
        },
        "x-actions": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/odata.action"
                }
            }
        },
        "x-entityContainer": {
            "$ref": "#/definitions/odata.entityContainer"
        },
        "x-functions": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/odata.function"
                }
            }
        },
        "x-references": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/odata.reference"
            }
        },
        "x-schemas": {
            "type": "object",
            "additionalProperties": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/odata.ref"
                    },
                    {
                        "$ref": "#/definitions/odata.schema"
                    }
                ]
            }
        },
        "x-terms": {
            "description": "@TODO:define"
        }
    },
    "definitions": {
        "Edm.ComplexType": {
            "type": "object"
        },
        "Edm.EntityType": {
            "type": "object"
        },
        "Edm.PrimitiveType": {
            "type": [
                "boolean",
                "number",
                "string"
            ]
        },
        "Edm.AnnotationPath": {
            "type": "object",
            "properties": {
                "@odata.annotationPath": {
                    "type": "string"
                }
            },
            "required": [
                "@odata.annotationPath"
            ]
        },
        "Edm.NavigationPropertyPath": {
            "type": "object",
            "properties": {
                "@odata.navigationPropertyPath": {
                    "type": "string"
                }
            },
            "required": [
                "@odata.navigationPropertyPath"
            ]
        },
        "Edm.PropertyPath": {
            "type": "object",
            "properties": {
                "@odata.propertyPath": {
                    "type": "string"
                }
            },
            "required": [
                "@odata.propertyPath"
            ]
        },
        "Edm.Binary": {
            "type": "string",
            "format": "base64url",
            "pattern": "^([A-Za-z0-9_-]{4})*([A-Za-z0-9_-]{3}[A-Za-z0-9_-]|[A-Za-z0-9_-]{2}[AEIMQUYcgkosw048]=?|[A-Za-z0-9_-][AQgw](==)?)?$"
        },
        "Edm.Byte": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0,
            "maximum": 255
        },
        "Edm.Date": {
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
        },
        "Edm.DateTimeOffset": {
            "type": "string",
            "format": "date-time",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
        },
        "Edm.Double": {
            "anyOf": [
                {
                    "type": "number",
                    "format": "double"
                },
                {
                    "enum": [
                        "-INF",
                        "INF",
                        "NaN"
                    ]
                }
            ]
        },
        "Edm.Duration": {
            "type": "string",
            "format": "duration",
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$"
        },
        "Edm.Guid": {
            "type": "string",
            "format": "uuid",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        },
        "Edm.Int16": {
            "type": "integer",
            "format": "int16",
            "minimum": -32768,
            "maximum": 32767
        },
        "Edm.Int32": {
            "type": "integer",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
        },
        "Edm.Int64": {
            "type": "integer",
            "format": "int64",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
        },
        "Edm.SByte": {
            "type": "integer",
            "format": "int8",
            "minimum": -128,
            "maximum": 127
        },
        "Edm.Single": {
            "anyOf": [
                {
                    "type": "number",
                    "format": "single"
                },
                {
                    "enum": [
                        "-INF",
                        "INF",
                        "NaN"
                    ]
                }
            ]
        },
        "Edm.Stream": {
            "description": "Edm.Stream properties aren't represented inline",
            "type": "string",
            "readOnly": true
        },
        "Edm.TimeOfDay": {
            "type": "string",
            "format": "time",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$"
        },
        "Edm.Geography": {
            "$ref": "#/definitions/Edm.Geometry"
        },
        "Edm.GeographyPoint": {
            "$ref": "#/definitions/Edm.GeometryPoint"
        },
        "Edm.GeographyLineString": {
            "$ref": "#/definitions/Edm.GeometryLineString"
        },
        "Edm.GeographyPolygon": {
            "$ref": "#/definitions/Edm.GeometryPolygon"
        },
        "Edm.GeographyMultiPoint": {
            "$ref": "#/definitions/Edm.GeometryMultiPoint"
        },
        "Edm.GeographyMultiLineString": {
            "$ref": "#/definitions/Edm.GeometryMultiLineString"
        },
        "Edm.GeographyMultiPolygon": {
            "$ref": "#/definitions/Edm.GeometryMultiPolygon"
        },
        "Edm.GeographyCollection": {
            "$ref": "#/definitions/Edm.GeometryCollection"
        },
        "Edm.Geometry": {
            "type": "object",
            "@TODO": "This is not allowed in OpenAPI 2.0 - place it in description and reduce the structure to type property with enum list of all seven subtypes",
            "anyOf": [
                {
                    "$ref": "#/definitions/Edm.GeometryPoint"
                },
                {
                    "$ref": "#/definitions/Edm.GeometryLineString"
                },
                {
                    "$ref": "#/definitions/Edm.GeometryPolygon"
                },
                {
                    "$ref": "#/definitions/Edm.GeometryMultiPoint"
                },
                {
                    "$ref": "#/definitions/Edm.GeometryMultiLineString"
                },
                {
                    "$ref": "#/definitions/Edm.GeometryMultiPolygon"
                },
                {
                    "$ref": "#/definitions/Edm.GeometryCollection"
                }
            ]
        },
        "Edm.GeometryPoint": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "Point"
                    ],
                    "default": "Point"
                },
                "coordinates": {
                    "$ref": "#/definitions/GeoJSON.position"
                }
            },
            "required": [
                "type",
                "coordinates"
            ]
        },
        "Edm.GeometryLineString": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "LineString"
                    ]
                },
                "coordinates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeoJSON.position"
                    },
                    "minItems": 2
                }
            },
            "required": [
                "type",
                "coordinates"
            ]
        },
        "Edm.GeometryPolygon": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "Polygon"
                    ]
                },
                "coordinates": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/GeoJSON.position"
                        },
                        "minItems": 4
                    }
                }
            },
            "required": [
                "type",
                "coordinates"
            ]
        },
        "Edm.GeometryMultiPoint": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "MultiPoint"
                    ]
                },
                "coordinates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeoJSON.position"
                    }
                }
            },
            "required": [
                "type",
                "coordinates"
            ]
        },
        "Edm.GeometryMultiLineString": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "MultiLineString"
                    ]
                },
                "coordinates": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/GeoJSON.position"
                        },
                        "minItems": 2
                    }
                }
            },
            "required": [
                "type",
                "coordinates"
            ]
        },
        "Edm.GeometryMultiPolygon": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "MultiPolygon"
                    ]
                },
                "coordinates": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GeoJSON.position"
                            },
                            "minItems": 4
                        }
                    }
                }
            },
            "required": [
                "type",
                "coordinates"
            ]
        },
        "Edm.GeometryCollection": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "GeometryCollection"
                    ]
                },
                "geometries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Edm.Geometry"
                    }
                }
            }
        },
        "GeoJSON.position": {
            "type": "array",
            "items": {
                "type": "number"
            },
            "minItems": 2
        },
        "odata.action": {
            "type": "object",
            "properties": {
                "isBound": {
                    "type": "boolean"
                },
                "entitySetPath": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "http://json-schema.org/draft-04/schema#"
                    }
                },
                "returnType": {
                    "$ref": "http://json-schema.org/draft-04/schema#"
                }
            }
        },
        "odata.actionFunctionAdvertisement": {
            "description": "Marker in responses that a collection or instance allows invocation of a bound action or function",
            "type": "object",
            "properties": {
                "target": {
                    "type": "string",
                    "format": "uri"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "odata.actionImport": {
            "type": "object",
            "description": "@TODO:define"
        },
        "odata.annotation": {
            "description": "Annotations can be any OData JSON type"
        },
        "odata.entityContainer": {
            "type": "object",
            "description": "@TODO:define",
            "properties": {
                "name": {
                    "type": "string"
                },
                "entitySets": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/odata.entitySet"
                    }
                },
                "singletons": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/odata.singleton"
                    }
                },
                "actionImports": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/odata.actionImport"
                    }
                },
                "functionImports": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/odata.functionImport"
                    }
                }
            }
        },
        "odata.entitySet": {
            "type": "object",
            "description": "@TODO:define"
        },
        "odata.error": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/odata.error.main"
                }
            }
        },
        "odata.error.main": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/odata.error.detail"
                    }
                },
                "innererror": {
                    "description": "The contents of this object are service-defined"
                }
            }
        },
        "odata.error.detail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "odata.function": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/odata.action"
                }
            ],
            "properties": {
                "isComposable ": {
                    "type": "boolean"
                }
            }
        },
        "odata.functionImport": {
            "type": "object",
            "description": "@TODO:define"
        },
        "odata.ref": {
            "description": "JSON Reference to a CSDL element",
            "type": "object",
            "properties": {
                "$ref": {
                    "type": "string",
                    "format": "uri"
                }
            },
            "required": [
                "$ref"
            ]
        },
        "odata.reference": {
            "type": "object",
            "properties": {
                "includeAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "termNamespace": {
                                    "type": "string"
                                },
                                "targetNamespace": {
                                    "type": "string"
                                },
                                "qualifier": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "uniqueItems": true
                }
            },
            "patternProperties": {
                "^@": {
                    "$ref": "#/definitions/odata.annotation"
                }
            }
        },
        "odata.schema": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "patternProperties": {
                            "^@": {
                                "$ref": "#/definitions/odata.annotation"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^@": {
                    "$ref": "#/definitions/odata.annotation"
                }
            }
        },
        "odata.singleton": {
            "type": "object",
            "description": "@TODO:define"
        }
    },
    "parameters": {
        "expand": {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398298)",
            "type": "string"
        },
        "select": {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398297)",
            "type": "string"
        },
        "orderby": {
            "name": "$orderby",
            "in": "query",
            "description": "Order by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398305)",
            "type": "string"
        },
        "top": {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n elements, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398306)",
            "type": "integer"
        },
        "skip": {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n elements, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398307)",
            "type": "integer"
        },
        "count": {
            "name": "$count",
            "in": "query",
            "description": "Include count of elements, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398308)",
            "type": "boolean"
        },
        "filter": {
            "name": "$filter",
            "in": "query",
            "description": "Filter elements by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398301)",
            "type": "string"
        },
        "search": {
            "name": "$search",
            "in": "query",
            "description": "Search elements by search phrases, see [OData Searching](http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398309)",
            "type": "string"
        }
    }
}